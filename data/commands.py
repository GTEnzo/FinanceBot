from data.charts_generator import *
from data.constants_and_etc import *
from data.limits_functions import *

import requests
from datetime import datetime
from telegram import Update


async def start(update: Update, context):
    user = update.effective_user
    create_or_import_user(f'{user['id']}')
    USER_STATES[user.id] = UserState.NONE
    await update.message.reply_html(
        f'<b>–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø FinanceBot!</b>\n\n'
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –±–∞–ª–∞–Ω—Å–æ–º –∏ –ª–∏–º–∏—Ç–∞–º–∏.',
        reply_markup=markup
    )


async def profile(update: Update, context):
    # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = update.effective_user
    create_or_import_user(f'{user.id}')

    # –ø–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    balance = import_balance(f'{user.id}')
    general_limit = import_general_limit(f'{user.id}')
    data = import_limits(user.id)
    if data:
        data = data.replace("'", '"')
        user_data = json.loads(data)
        limits = user_data.get('limits', {})
    else:
        limits = None

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
    balance_info = f'{float(balance):.2f} ‚ÇΩ' if balance is not None else '–ù–µ –∑–∞–¥–∞–Ω'
    general_limit_info = f'{general_limit[0]:.2f} ‚ÇΩ' if general_limit[0] else '–ù–µ –∑–∞–¥–∞–Ω'

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ —Å—É–º–º—ã –±–µ–∑ —Ç—Ä–∞—Ç)
    limit_info = [f'‚Ä¢ {category.capitalize()}: {limit_data['limit']:.2f} ‚ÇΩ'
                  for category, limit_data in limits.items()] if limits else None

    caption = (
            f'üë§ {user.mention_html()}\n\n'
            f'üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {balance_info}\n\n'
            f'üßæ <b>–û–±—â–∏–π –ª–∏–º–∏—Ç:</b> {general_limit_info}\n\n'
            f'üìå <b>–õ–∏–º–∏—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:</b>\n' +
            ('\n'.join(limit_info) if limit_info else '–ù–µ –∑–∞–¥–∞–Ω—ã')
    )

    # –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º
    try:
        photos = await context.bot.get_user_profile_photos(user.id, limit=1)
        if photos.total_count > 0:
            photo_file = await photos.photos[0][0].get_file()
            await update.message.reply_photo(
                photo=photo_file.file_id,
                caption=caption,
                parse_mode='HTML',
                reply_markup=markup
            )
        else:
            # –µ—Å–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await update.message.reply_text(
                caption,
                parse_mode='HTML',
                reply_markup=markup
            )
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è: {e}')
        await update.message.reply_text(
            caption,
            parse_mode='HTML',
            reply_markup=markup
        )


async def stats(update: Update, context):
    # –ø–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É
    user_id = update.effective_user.id

    # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –µ–≥–æ –ª–∏–º–∏—Ç–æ–≤
    data = import_limits(user_id)
    if data:
        data = data.replace("'", '"')
        user_data = json.loads(data)
    else:
        user_data = {}

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã
    if user_data.get('limits'):
        try:
            # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            chart_url = generate_chart_url(user_data)

            # –µ—Å–ª–∏ URL –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ
            if chart_url:
                # –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≥—Ä–∞—Ñ–∏–∫–∞ (HEAD-–∑–∞–ø—Ä–æ—Å)
                response = requests.head(chart_url, timeout=5)

                # –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ 200 (OK)
                if response.status_code == 200:
                    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≥—Ä–∞—Ñ–∏–∫ –≤ –≤–∏–¥–µ —Ñ–æ—Ç–æ
                    await update.message.reply_photo(
                        photo=chart_url,
                        caption='üìä <b>–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</b>',
                        parse_mode='HTML'
                    )
                else:
                    # –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
                    raise Exception(f'‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}')

        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
        except Exception as e:
            print(f'[–û—à–∏–±–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞] {e}')
            # —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            await update.message.reply_text(
                '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫. –ü–æ–∫–∞–∑—ã–≤–∞—é —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...'
            )

    # –Ω–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    report = ['<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>']

    # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    balance = import_balance(f'{user_id}')
    if balance:
        # –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ –≤ –æ—Ç—á–µ—Ç
        report.append(f'\nüí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {balance:.2f} ‚ÇΩ')

    # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—â–∏–π –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    general_limit = import_general_limit(f'{user_id}')
    if general_limit[0]:
        # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ª–∏–º–∏—Ç–∞ (–ø—Ä–µ–≤—ã—à–µ–Ω –∏–ª–∏ –Ω–µ—Ç)
        status = '‚ö†Ô∏è' if general_limit[1] > general_limit[0] else '‚úÖ'
        # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
        period_end = convert_time_format(general_limit[3])

        # –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—â–µ–º –ª–∏–º–∏—Ç–µ
        report.append(f'\nüßæ <b>–û–±—â–∏–π –ª–∏–º–∏—Ç:</b> {general_limit[1]:.2f}/{general_limit[0]:.2f} ‚ÇΩ {status}')
        report.append(f'üìÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {period_end}')

    # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    if user_data.get('limits'):
        report.append('\nüìå <b>–õ–∏–º–∏—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:</b>')

        # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for cat, data in user_data['limits'].items():
            # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            status = '‚ö†Ô∏è' if data['spent'] > data['limit'] else '‚úÖ'
            # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞
            period_end = data.get('period_end', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
            # –µ—Å–ª–∏ –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ datetime - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É
            if isinstance(period_end, datetime):
                period_end = period_end.strftime('%d.%m.%Y %H:%M')

            # –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            report.append(f'\n‚Ä¢ <b>{cat.capitalize()}</b>: {data['spent']:.2f}/{data['limit']:.2f} ‚ÇΩ {status}')
            report.append(f'  üìÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {period_end}')

    # –µ—Å–ª–∏ –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ –æ—Ç—á–µ—Ç–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
    if report == ['<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>']:
        report = ['‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è']

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    await update.message.reply_text(
        '\n'.join(report),  # –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á–µ—Ç–∞
        parse_mode='HTML',  # —Ä–∞–∑—Ä–µ—à–∞–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫—É
        reply_markup=markup  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )


async def set_balance(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = update.effective_user.id

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞–ª–∞–Ω—Å–∞
    USER_STATES[user_id] = UserState.SETTING_BALANCE

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –≤–≤–æ–¥–∞ –±–∞–ª–∞–Ω—Å–∞
    await update.message.reply_text(
        '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ). –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.'
    )


async def add_to_balance(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = update.effective_user.id
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    USER_STATES[user_id] = UserState.ADDING_TO_BALANCE
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    await update.message.reply_text(
        '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ). –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.'
    )


async def set_limit(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = update.effective_user.id
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ª–∏–º–∏—Ç–∞
    USER_STATES[user_id] = UserState.SETTING_LIMIT_AMOUNT
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –≤–≤–æ–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—É–º–º—ã –ª–∏–º–∏—Ç–∞
    await update.message.reply_text(
        '–£–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ª–∏–º–∏—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–µ–¥–∞") –∏ —Å—É–º–º—É –ª–∏–º–∏—Ç–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ), –Ω–∞–ø—Ä–∏–º–µ—Ä "–µ–¥–∞ 100". –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.'
    )


async def set_general_limit(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = update.effective_user.id
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞
    USER_STATES[user_id] = UserState.SETTING_GENERAL_LIMIT_AMOUNT
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞
    await update.message.reply_text(
        '–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ). –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.'
    )


async def remove_general_limit(update: Update, context):
    user_id = update.effective_user.id
    # –£–¥–∞–ª—è–µ–º –æ–±—â–∏–π –ª–∏–º–∏—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    remove_gen_limit(user_id)
    USER_STATES[user_id] = UserState.NONE
    await update.message.reply_text(
        '–û–±—â–∏–π –ª–∏–º–∏—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.', reply_markup=markup
    )


async def remove_limit(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = update.effective_user.id
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
    USER_STATES[user_id] = UserState.REMOVING_LIMIT
    await update.message.reply_text(
        '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏–º–∏—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.', reply_markup=markup
    )


async def cancel(update: Update, context):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    user_id = update.effective_user.id
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ (NONE)
    USER_STATES[user_id] = UserState.NONE
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await update.message.reply_text(
        '–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.', reply_markup=markup
    )


async def help(update: Update, context):
    help_text = '''
<b>üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º FinanceBot</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
‚Ä¢ /profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å (–±–∞–ª–∞–Ω—Å –∏ –ª–∏–º–∏—Ç—ã)
‚Ä¢ /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ (–≥—Ä–∞—Ñ–∏–∫ + —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç)

<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º:</b>
‚Ä¢ /set_balance - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
‚Ä¢ /add_to_balance - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
 *–ü—Ä–æ—Å—Ç–æ–π –≤–≤–æ–¥ —á–∏—Å–ª–∞* - –ó–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–∞—Ç—É
 *–í–≤–æ–¥ –≤ –≤–∏–¥–µ "–∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É–º–º–∞"* - –ó–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–∞—Ç—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–µ–¥–∞ 100")

<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞–º–∏:</b>
‚Ä¢ /set_limit - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
‚Ä¢ /set_general_limit - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—â–∏–π –ª–∏–º–∏—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤
‚Ä¢ /remove_limit - –£–¥–∞–ª–∏—Ç—å –ª–∏–º–∏—Ç —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
‚Ä¢ /remove_general_limit - –£–¥–∞–ª–∏—Ç—å –æ–±—â–∏–π –ª–∏–º–∏—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>
‚Ä¢ /cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é

<b>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å 5000 —Ä—É–±: /set_balance ‚Üí "5000"
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å 1000 —Ä—É–± –∫ –±–∞–ª–∞–Ω—Å—É: /add_to_balance ‚Üí "1000"
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –Ω–∞ –µ–¥—É: /set_limit ‚Üí "–µ–¥–∞ 3000" ‚Üí –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ (–¥–µ–Ω—å, –Ω–µ–¥–µ–ª—è, –º–µ—Å—è—Ü, –≥–æ–¥)
‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–∞—Ç—É: "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç 100" –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "100"
    '''
    await update.message.reply_html(help_text, reply_markup=markup)


async def handle_text(update: Update, context):
    # –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    user_id = update.effective_user.id

    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = update.message.text.strip()
    # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NONE
    state = USER_STATES.get(user_id, UserState.NONE)

    # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—ã
    if text == COMMAND_CANCEL:
        # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–º–µ–Ω—ã
        await cancel(update, context)
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞
    if state == UserState.SETTING_BALANCE:
        try:
            # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ, –∑–∞–º–µ–Ω—è—è –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É
            new_balance = float(text.replace(',', '.'))
            # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            USER_STATES[user_id] = UserState.NONE
            # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            update_balance(user_id, new_balance)
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            await update.message.reply_text(
                f'–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω: {new_balance:.2f}.', reply_markup=markup
            )
        except ValueError:
            # –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ
            await update.message.reply_text(
                '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.'
            )
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    if state == UserState.ADDING_TO_BALANCE:
        try:
            # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ
            adding = float(text.replace(',', '.'))
            # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            USER_STATES[user_id] = UserState.NONE
            # –¥–æ–±–∞–≤–ª—è–µ–º —Å—É–º–º—É –∫ –±–∞–ª–∞–Ω—Å—É
            to_balance(user_id, adding)
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            await update.message.reply_text(
                f'–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {adding}.', reply_markup=markup
            )
        except ValueError:
            # –µ—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ
            await update.message.reply_text(
                '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel.'
            )
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞
    if state == UserState.SETTING_LIMIT_AMOUNT:
        try:
            # —Ä–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å—É–º–º—É
            category, limit_str = text.split()
            # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É–º–º—É –≤ —á–∏—Å–ª–æ
            limit = float(limit_str.replace(',', '.'))
            # –ø–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            data = import_limits(user_id)
            if data:
                data = data.replace("'", '"')
                user_data = json.loads(data)
            else:
                user_data = {}
            # —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ª–∏–º–∏—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            user_data.setdefault('limits', {})[category] = {'limit': limit, 'spent': 0.0, 'period': '',
                                                            'period_end': ''}

            # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–æ–≤
            update_cat_limits(user_id, f'{user_data}')

            # –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞
            USER_STATES[user_id] = UserState.SETTING_LIMIT_PERIOD
            # –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥
            await update.message.reply_text(
                '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è —ç—Ç–æ–≥–æ –ª–∏–º–∏—Ç–∞:', reply_markup=period_markup
            )
        except ValueError:
            # –µ—Å–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
            await update.message.reply_text(
                '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å—É–º–º—É –ª–∏–º–∏—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: "–µ–¥–∞ 100".'
            )
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –ª–∏–º–∏—Ç–∞
    if state == UserState.SETTING_LIMIT_PERIOD:
        # –ø—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        period = text.lower()
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–∏–æ–¥ –¥–æ–ø—É—Å—Ç–∏–º—ã–π
        if period in LIMIT_PERIODS:
            # –ø–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            data = import_limits(user_id)
            if data:
                data = data.replace("'", '"')
                user_data = json.loads(data)
            else:
                user_data = {}

            # –∏—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–µ–∑ –ø–µ—Ä–∏–æ–¥–∞
            for category in user_data.get('limits', {}):
                if user_data['limits'][category]['period'] == '':
                    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥
                    user_data['limits'][category]['period'] = LIMIT_PERIODS[period]
                    # —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è
                    user_data['limits'][category]['period_end'] = calculate_period_end(LIMIT_PERIODS[period],
                                                                                       datetime.now())

                # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–æ–≤
                update_cat_limits(user_id, f'{user_data}')

            # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            USER_STATES[user_id] = UserState.NONE
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            await update.message.reply_text(
                f'–ü–µ—Ä–∏–æ–¥ –¥–ª—è –ª–∏–º–∏—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {period}.', reply_markup=markup
            )
        else:
            # –µ—Å–ª–∏ –ø–µ—Ä–∏–æ–¥ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
            await update.message.reply_text(
                '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é, –º–µ—Å—è—Ü –∏–ª–∏ –≥–æ–¥.'
            )
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞
    if state == UserState.SETTING_GENERAL_LIMIT_AMOUNT:
        try:
            # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ
            new_general_limit = float(text.replace(',', '.'))
            # –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞
            USER_STATES[user_id] = UserState.SETTING_GENERAL_LIMIT_PERIOD
            # –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –ª–∏–º–∏—Ç
            update_general_limit(user_id, new_general_limit, -1)
            # –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥
            await update.message.reply_text(
                '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞:', reply_markup=period_markup
            )
        except ValueError:
            # –µ—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ
            await update.message.reply_text(
                '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: "100".'
            )
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞
    if state == UserState.SETTING_GENERAL_LIMIT_PERIOD:
        # –ø—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        new_period = text.lower()
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∞
        if new_period in LIMIT_PERIODS:
            # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            USER_STATES[user_id] = UserState.NONE
            # –æ–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞
            update_general_limit_period(user_id, new_period, datetime.now())
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            await update.message.reply_text(
                f'–ü–µ—Ä–∏–æ–¥ –¥–ª—è –æ–±—â–µ–≥–æ –ª–∏–º–∏—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {new_period}.', reply_markup=markup
            )
        else:
            # –µ—Å–ª–∏ –ø–µ—Ä–∏–æ–¥ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
            await update.message.reply_text(
                '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é, –º–µ—Å—è—Ü –∏–ª–∏ –≥–æ–¥.'
            )
        return

    # –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    if state == UserState.REMOVING_LIMIT:
        # –ø—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        category = text.lower()
        # –ø–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        data = import_limits(user_id)
        if data:
            data = data.replace("'", '"')
            user_data = json.loads(data)
        else:
            user_data = {}

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if 'limits' in user_data and category in user_data['limits']:
            # —É–¥–∞–ª—è–µ–º –ª–∏–º–∏—Ç
            del user_data['limits'][category]
            # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–æ–≤
            update_cat_limits(user_id, json.dumps(user_data))
            await update.message.reply_text(
                f'–õ–∏–º–∏—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.', reply_markup=markup)
        else:
            await update.message.reply_text(
                f'‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è "{category}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –≤–∞—à–∏—Ö –ª–∏–º–∏—Ç–∞—Ö.', reply_markup=markup)
        return

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç—Ä–∞—Ç (–Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
    try:
        # –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ (—Ç—Ä–∞—Ç–∞ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
        spend_amount = float(text.replace(',', '.'))

        # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        balance = import_balance(user_id)

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –±–∞–ª–∞–Ω—Å
        if balance is None:
            await update.message.reply_text(
                '‚ùå –ë–∞–ª–∞–Ω—Å –Ω–µ –∑–∞–¥–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ /set_balance.'
            )
            return

        else:
            # –ø–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π –ª–∏–º–∏—Ç
            general_limit = import_general_limit(user_id)
            # —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
            new_balance = balance - spend_amount

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–π–¥–µ—Ç –ª–∏ –±–∞–ª–∞–Ω—Å –≤ –º–∏–Ω—É—Å
        if new_balance - spend_amount < 0:
            await update.message.reply_text(
                f'‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ –Ω—É–ª—è.'
            )
        # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        update_balance(user_id, balance - spend_amount)

        # –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±—â–∏–π –ª–∏–º–∏—Ç
        if general_limit[0]:
            # –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –ª–∏–º–∏—Ç
            update_general_limit(user_id, general_limit[0], spend_amount)
            general_limit[1] += spend_amount

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞
            if general_limit[1] > general_limit[0]:
                await update.message.reply_text(
                    f'‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—â–∏–π –ª–∏–º–∏—Ç {general_limit[0]:.2f}.\n'
                    f'–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {general_limit[1]:.2f}.', reply_markup=markup
                )

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ —Ç—Ä–∞—Ç–µ
        await update.message.reply_text(
            f'–£—á—Ç–µ–Ω–∞ —Ç—Ä–∞—Ç–∞: {spend_amount:.2f}\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {balance - spend_amount:.2f}', reply_markup=markup
        )
    except ValueError:
        # –µ—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å –∫–∞–∫ "–∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É–º–º–∞"
        try:
            # —Ä–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å—É–º–º—É
            category, spend_str = text.split()
            spend_amount = float(spend_str.replace(',', '.'))

            # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–æ–≤
            data = import_limits(user_id)
            if data:
                data = data.replace("'", '"')
                user_data = json.loads(data)
            else:
                user_data = {}

            # –ø–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
            balance = import_balance(user_id)
            general_limit = import_general_limit(user_id)

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –±–∞–ª–∞–Ω—Å
            if balance is None:
                await update.message.reply_text(
                    '‚ùå –ë–∞–ª–∞–Ω—Å –Ω–µ –∑–∞–¥–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ /set_balance.'
                )
                return

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if 'limits' not in user_data or category not in user_data['limits']:
                await update.message.reply_text(
                    f'‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è "{category}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ª–∏–º–∏—Ç –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ /set_limit.',
                    reply_markup=markup
                )
                return

            # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            limit_data = user_data['limits'][category]
            # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—É—é —Å—É–º–º—É
            limit_data['spent'] += spend_amount

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            if limit_data['spent'] > limit_data['limit']:
                await update.message.reply_text(
                    f'‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç {limit_data['limit']:.2f} –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category}".\n'
                    f'–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {limit_data['spent']:.2f}.'
                )

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–π–¥–µ—Ç –ª–∏ –±–∞–ª–∞–Ω—Å –≤ –º–∏–Ω—É—Å
            if balance - spend_amount < 0:
                await update.message.reply_text(
                    f'‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ –Ω—É–ª—è.'
                )

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞
            if general_limit[1] > general_limit[0]:
                await update.message.reply_text(
                    f'‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—â–∏–π –ª–∏–º–∏—Ç {general_limit[0]:.2f}.\n'
                    f'–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: {general_limit[1]:.2f}.', reply_markup=markup
                )

            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ —Ç—Ä–∞—Ç–µ
            await update.message.reply_text(
                f'–£—á—Ç–µ–Ω–∞ —Ç—Ä–∞—Ç–∞: {spend_amount:.2f}\n'
                f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n'
                f'–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {balance - spend_amount:.2f}',
                reply_markup=markup
            )
            # –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            update_balance(user_id, balance - spend_amount),
            # –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –ª–∏–º–∏—Ç
            update_general_limit(user_id, general_limit[0], spend_amount)
            # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–º–∏—Ç–æ–≤
            update_cat_limits(user_id, f'{user_data}')

        except ValueError:
            # –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
            await update.message.reply_text(
                '‚ùå –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞–º –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help.',
                reply_markup=markup
            )